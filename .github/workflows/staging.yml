name: Terraform - Staging
on:
  pull_request:
    branches:
      - "master"
env:
  SCRIPTS_DIR: .github/scripts

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    name: Terraform
    environment: TERRAFORM_STAGING
    steps:
      - name: Check-Out
        uses: actions/checkout@v3
        with:
          repository: jmgreg31/terraform-aws-cloudfront
          token: ${{ secrets.GH_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv sync --dev
          pipenv run pre-commit install

      - name: Lint
        id: lint
        run: |
          pipenv run pre-commit run --all-files
        shell: bash

      - name: Unit Test and Coverage
        id: unit-test
        run: |
          pipenv run pytest --junitxml=junit_xml_test_report.xml --cov .github/scripts/ .github/tests --cov-branch
        shell: bash

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 0.13.1
          terraform_wrapper: false

      - name: Staging Init
        id: staging
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          pipenv run python ${{ env.SCRIPTS_DIR }}/staging.py
        shell: bash

      - name: Terraform Init
        id: init
        run: |
          cd example/
          terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        shell: bash

      - name: Terraform Plan
        id: plan
        run: |
          cd example/
          terraform plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        shell: bash
